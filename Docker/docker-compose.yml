services:
  # --- üê¨ MySQL Database ---
  mysql-snmp:
    image: mysql:8.0
    container_name: mysql-snmp
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 10

  # --- üåê Flask + Poller ensemble ---
  #flask-snmp:
  #  build: .
  #  container_name: flask-snmp
  #  depends_on:
  #    mysql-snmp:
  #      condition: service_healthy
  #  environment:
  #    FLASK_ENV: production
  #    SECRET_KEY: ${SECRET_KEY}
  #    DB_HOST: mysql-snmp
  #    DB_PORT: ${MYSQL_HOST_PORT}
  #    DB_NAME: ${MYSQL_DATABASE}
  #    DB_USER: ${MYSQL_USER}
  #    DB_PASSWORD: ${MYSQL_PASSWORD}
  #  ports:
  #    - "5000:5000"
  #  volumes:
  #    - .:/app
  #  restart: always

  # --- üß∞ Adminer (interface web SQL facultative) ---
  adminer:
    image: adminer:latest
    container_name: adminer
    depends_on:
      mysql-snmp:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql-snmp

volumes:
  mysql_data:
